name: Solana Program CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: 2.1.0
  ANCHOR_VERSION: 0.30.1
  ADMIN_PUBKEY: AXF3tTrMUD5BLzv5Fmyj63KXwvkuGdxMQemSJHtTag4j
  SPL_GOVERNANCE_PROGRAM_ID: HwXcHGabc19PxzYFVSfKvuaDSNpbLGL8fhVtkcTyEymj

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install npm dependencies
        run: |
          npm install
          npm install -g @metaplex-foundation/amman

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.83.0"
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.anza.com/v${{ env.SOLANA_VERSION }}/install)"
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          solana --version

      - name: Install Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}

      - name: Rust Format Check
        run: cargo fmt --all -- --check

      - name: Clippy Check
        run: |
          cargo clippy -- \
            -A ambiguous_glob_reexports \
            -D warnings

      - name: Anchor Build
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          anchor build

      - name: Create Solana Config Dir
        run: |
          mkdir -p /home/runner/.config/solana
          solana-keygen new --no-bip39-passphrase -o /home/runner/.config/solana/id.json

      - name: Cargo Test
        run: cargo test

      - name: Install cargo-tarpaulin
        if: always()
        run: cargo install cargo-tarpaulin

      - name: Generate coverage report
        if: always()
        continue-on-error: true
        run: |
          cargo tarpaulin --workspace \
          --exclude-files \
          "programs/*/src/instructions/*" \
          "programs/*/src/external/*" \
          "programs/*/src/**/events.rs" \
          "programs/*/src/**/state.rs" \
          "programs/*/src/lib.rs" \
          "programs/*/src/**/errors.rs" \
          --out Html \
          --output-dir target/tarpaulin

      - name: Upload coverage report
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/tarpaulin
          retention-days: 7

      - name: Bankrun Test
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          anchor run test-bankrun

      - name: Run Amman Tests
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          amman start &
          sleep 15  # Give amman time to start
          anchor test --skip-local-validator --skip-deploy --skip-build
